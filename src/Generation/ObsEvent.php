<?php

namespace iggyvolz\obs\Generation;

use Nette\PhpGenerator\ClassType;
use Nette\PhpGenerator\PhpFile;
use Nette\PhpGenerator\PsrPrinter;

final class ObsEvent implements Savable
{
    /**
     * @param ObsField[] $dataFields
     */
    public function __construct(
        public readonly string $description,
        public readonly string $eventType,
        public readonly string $eventSubscription,
        public readonly int $complexity,
        public readonly string $rpcVersion,
        public readonly bool $deprecated,
        public readonly string $initialVersion,
        public readonly string $category,
        /** @var ObsField[] */
        public readonly array $dataFields,
    )
    {
    }

    public function save(ClassType $trait): void
    {
        $file = new PhpFile();
        $class = $file->setStrictTypes()->addNamespace("iggyvolz\\obs\\Event")->addClass($this->eventType)->addComment("@autogenerated");
        $constructor = $class->addMethod("__construct");
        foreach($this->dataFields as $dataField) {
            $field = $constructor->addPromotedParameter($dataField->valueName);
            [$type, $dbtype] = ObsProtocol::getType($dataField);
            $field->setType($type)->setReadOnly();
            $constructor->addComment("@param $dbtype \$$dataField->valueName");
        }
        file_put_contents(__DIR__ . "/../Event/$this->eventType.php", (new PsrPrinter())->printFile($file));
    }
}